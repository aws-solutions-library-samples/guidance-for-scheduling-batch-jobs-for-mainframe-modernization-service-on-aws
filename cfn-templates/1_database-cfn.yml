AWSTemplateFormatVersion: "2010-09-09"
Description: Create Database for M2 Application

Parameters:

  BucketName:
    Description: 'bucket name'
    Type: String
    Default: 'm2-replatform-batch-scheduler'

  AppKey:
    Description: 's3 app key'
    Default: 'v1'
    Type: String

  JclKey:
    Description: 's3 jcl key'
    Default: 'jcls'
    Type: String

  Tn3270Port:
    Description: 'm2 tn3270 port'
    Default: 7000
    Type: Number


Resources:
  M2AppDef:
    Type: AWS::SSM::Parameter
    DeletionPolicy: Delete
    Properties:
      Type: 'String'
      Value: !Sub |
        {
         "template-version": "2.0",
         "source-locations": [
            {
                "source-id": "s3-source",
                "source-type": "s3",
                "properties": {
                    "s3-bucket": "${BucketName}",
                    "s3-key-prefix": "${AppKey}"
                }
            }
          ],
          "definition" : {
            "listeners": [
              {
                "port": ${Tn3270Port},
                "type": "tn3270"
              }
            ],
            "dataset-location": {
              "db-locations": [
                {
                  "name": "DatabaseM2",
                  "secret-manager-arn": "${M2DbSecret}"
                }
              ]
            },
            "batch-settings": {
                "initiators": [{
                    "classes": ["A", "B"],
                    "description": "batch initiators for classes A & B"
                }],
                "jcl-file-location": "${!s3-source}/${JclKey}"
            }
          }
        }

  M2Database:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: "100"
      DBInstanceClass: db.t3.micro
      Engine: postgres
      MasterUsername: !Sub "{{resolve:secretsmanager:${M2DbSecret}::username}}"
      MasterUserPassword: !Sub "{{resolve:secretsmanager:${M2DbSecret}::password}}"
      ManageMasterUserPassword: false
      PubliclyAccessible: false
      BackupRetentionPeriod: 0

  M2DbKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Database Secret Key
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id:
          Ref: AWS::StackName
        Statement:
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS:
                Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action:
              - kms:*
            Resource: '*'
          - Effect: Allow
            Principal:
              Service: m2.amazonaws.com
            Action: kms:Decrypt
            Resource: '*'
  M2DbSecret:
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: Delete
    Properties:
      Description: 'Secret for M2 database'
      KmsKeyId: !GetAtt M2DbKMSKey.Arn
      GenerateSecretString:
        SecretStringTemplate: '{"username": "dbadmin"}'
        GenerateStringKey: 'password'
        PasswordLength: 16
        ExcludePunctuation: true

  M2DbSecretTargetAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    DeletionPolicy: Delete
    Properties:
      TargetType: 'AWS::RDS::DBInstance'
      SecretId: !Ref M2DbSecret
      TargetId: !Ref M2Database

  M2SecretResourcePolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      BlockPublicPolicy: "True"
      SecretId:
        Ref: M2DbSecret
      ResourcePolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: m2.amazonaws.com
            Action: secretsmanager:GetSecretValue
            Resource: '*'
